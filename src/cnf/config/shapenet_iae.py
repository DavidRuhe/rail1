config = {
    "name": "shapenet_iae",
    "project": "cnf",
    "entity": "druhe",
    "method": "grid",
    "deterministic": False,
    "device": "cuda",
    "command": [
        "python",
        "-u",
        "shapenet_iae.py",
        "config/shapenet_iae.py",
        "${args}",
    ],
    "seed": 0,
    "continue": None,
    "dataset": dict(
        name="shapenet",
        batch_size=16,
        points_subsample=2048,
        input_type="partial_pointcloud",
        points_file="points.npz",
        points_iou_file="points.npz",
        # points_file="data/ShapeNet/ShapeNetCore.v2.PC15k/points",
        # points_iou_file="data/ShapeNet/ShapeNetCore.v2.PC15k/points_iou",
        multi_files=None,
        pointcloud_n=2048,
        pointcloud_noise=0.005,
        pointcloud_file="pointcloud.npz",
        part_ratio=0.5,
        partial_type="centery_random",
        augment_rotate=True,
        augment_translate=False,
        augment_single_trans=False,
    ),
    "model": {
        "name": "shapenet_dfnet",
        "c_dim": 32,
        "padding": 0.1,
        "decoder": dict(sample_mode="bilinear", hidden_size=32),
        "encoder": dict(
            feat_dim=1024,
            plane_type=["xz", "xy", "yz"],
            plane_resolution=64,
            unet=True,
            unet_kwargs=dict(depth=4, merge_mode="concat", start_filts=32),
        ),
    },
    "optimizer": {"name": "adam", "lr": 1e-4},
    # "scheduler": {"max/_steps": 100_000, "warmup_steps": 1000, "decay_steps": 30000},
    # "scheduler": None,
    "fit": {
        "max_steps": 1_000_000,
        "print_interval": 100,
        "limit_val_batches": float("inf"),
        "val_check_interval": 4096,
    },
    "parameters": {"seed": {"values": [0]}},
}
